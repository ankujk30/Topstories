// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TopstoriesAPI.Data;

namespace TopstoriesAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TopstoriesAPI.Model.Multimedium", b =>
                {
                    b.Property<int>("Multimediumid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Copyright")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Format")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Height")
                        .HasColumnType("int");

                    b.Property<string>("Subtype")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Topstoriesid")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Width")
                        .HasColumnType("int");

                    b.HasKey("Multimediumid");

                    b.HasIndex("Topstoriesid");

                    b.ToTable("Multimedium");
                });

            modelBuilder.Entity("TopstoriesAPI.Model.Root", b =>
                {
                    b.Property<int>("Rootid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Copyright")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Last_updated")
                        .HasColumnType("datetime2");

                    b.Property<int>("Num_results")
                        .HasColumnType("int");

                    b.Property<string>("Section")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Rootid");

                    b.ToTable("Roots");
                });

            modelBuilder.Entity("TopstoriesAPI.Model.Topstories", b =>
                {
                    b.Property<int>("Topstoriesid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Abstract")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Byline")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Des_facet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Geo_facet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Item_type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Kicker")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Material_type_facet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Org_facet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Per_facet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Published_date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Rootid")
                        .HasColumnType("int");

                    b.Property<string>("Section")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Short_url")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subsection")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Updated_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Uri")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Topstoriesid");

                    b.HasIndex("Rootid");

                    b.ToTable("Topstories");
                });

            modelBuilder.Entity("TopstoriesAPI.Model.Multimedium", b =>
                {
                    b.HasOne("TopstoriesAPI.Model.Topstories", null)
                        .WithMany("Multimedia")
                        .HasForeignKey("Topstoriesid");
                });

            modelBuilder.Entity("TopstoriesAPI.Model.Topstories", b =>
                {
                    b.HasOne("TopstoriesAPI.Model.Root", null)
                        .WithMany("Results")
                        .HasForeignKey("Rootid");
                });
#pragma warning restore 612, 618
        }
    }
}
